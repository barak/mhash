From: "Barak A. Pearlmutter" <barak+git@pearlmutter.net>
Date: Mon, 28 Oct 2024 12:40:14 +0000
Subject: pointer cast

A pointer conversion for differently-sized integers causes an error in
GCC-14, this can be fixed using an explicit cast. Note that this is
not without danger.

See https://bugs.debian.org/1075269

Other distributions have the same fix.
* https://gitweb.gentoo.org/repo/gentoo.git/commit/app-crypt/mhash/files/mhash-0.9.9.9-cast-temp-64bit.patch
* https://src.fedoraproject.org/rpms/mhash/blob/rawhide/f/mhash-0.9.9.9-cast-temp-64bit.patch
---
 lib/tiger.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/lib/tiger.c b/lib/tiger.c
index 8f15df4..872b47d 100644
--- a/lib/tiger.c
+++ b/lib/tiger.c
@@ -254,7 +254,8 @@ void tiger_final(struct tiger_ctx *ctx)
 	register mutils_word64 i, j;
 	/* Force 64-bit alignment */
 	mutils_word64 temp_64bit[TIGER_DATASIZE/8];
-	mutils_word8 *temp = temp_64bit;
+	/*** DANGER! This pointer cast is not portable and seriously annoys GCC-14+ ***/
+	mutils_word8 *temp = (mutils_word8 *)temp_64bit;
 	i = ctx->index;
 	
 #if defined(WORDS_BIGENDIAN)
